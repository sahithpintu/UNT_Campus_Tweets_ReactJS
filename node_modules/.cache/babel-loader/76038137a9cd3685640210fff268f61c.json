{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vishn\\\\Documents\\\\UNT_CAMPUS_TWEETS-master\\\\UNT_CAMPUS_TWEETS-master\\\\UNT Campus_Tweets ReactJS\\\\src\\\\UserPostFooterIcons.js\",\n    _s = $RefreshSig$();\n\n// This component allows the users to perform actions such as delete and update the post.\nimport React, { useState, useEffect } from 'react';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\nfunction UserPostFooterIcons({\n  tweetId,\n  likes\n}) {\n  _s();\n\n  const [openDelete, setOpenDelete] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [tweetBody, setTweetBody] = useState('');\n  const [tweetImage, setTweetImage] = useState('');\n  const [tweetLikes, setTweetLikes] = useState(0);\n\n  const handleDeleteClickOpen = () => {\n    setOpenDelete(true);\n  };\n\n  const handleDeleteClose = () => {\n    setOpenDelete(false);\n  };\n\n  const handleUpdateClickOpen = () => {\n    setOpenUpdate(true);\n  };\n\n  const handleUpdateClose = () => {\n    setOpenUpdate(false);\n  };\n\n  const deleteTweet = tweetId => {\n    console.log(tweetId + \"deleted\");\n    axios.delete(`http://localhost:8080/twitter/tweets/${tweetId}`);\n    setOpenDelete(false);\n    window.location.reload();\n  };\n\n  const updateTweet = tweetId => {\n    console.log(tweetBody + \"-------\" + tweetImage);\n    axios.put(`http://localhost:8080/twitter/tweets/${tweetId}`, {\n      tweetBody: tweetBody,\n      tweetImage: tweetImage\n    });\n    setOpenUpdate(false);\n    window.location.reload();\n  };\n\n  const changeTweetBodyHandler = e => {\n    setTweetBody(e.target.value);\n  };\n\n  const changeTweetImageHandler = e => {\n    setTweetImage(e.target.value);\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:8080/twitter/tweets/${tweetId}`).then(response => {\n      let tweet = response.data;\n      setTweetBody(tweet.tweetBody);\n      setTweetImage(tweet.tweetImage);\n      setTweetLikes(tweet.likes);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {\n        fontSize: \"small\",\n        style: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '14px',\n          fontWeight: '600',\n          color: 'gray',\n          marginLeft: '5px'\n        },\n        children: tweetLikes > 0 && (tweetLikes === 1 ? `${tweetLikes} like` : `${tweetLikes} likes`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditIcon, {\n      fontSize: \"small\",\n      onClick: handleUpdateClickOpen,\n      style: {\n        cursor: 'pointer'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n      fontSize: \"small\",\n      onClick: handleDeleteClickOpen,\n      style: {\n        cursor: 'pointer'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDelete,\n      onClose: handleDeleteClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Delete Tweet?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"This can't be undone and it will be removed from your profile, the timeline of any accounts that follow you, and from Twitter search results.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteTweet(tweetId),\n          color: \"secondary\",\n          autoFocus: true,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openUpdate,\n      onClose: handleUpdateClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Update Tweet?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"tweet\",\n          label: \"Tweet\",\n          type: \"text\",\n          value: tweetBody,\n          fullWidth: true,\n          onChange: changeTweetBodyHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUpdateClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => updateTweet(tweetId),\n          style: {\n            color: 'green'\n          },\n          autoFocus: true,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserPostFooterIcons, \"5UUJ96zb2qwHkkh44ydFG4o1W08=\");\n\n_c = UserPostFooterIcons;\nexport default UserPostFooterIcons;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPostFooterIcons\");","map":{"version":3,"sources":["C:/Users/vishn/Documents/UNT_CAMPUS_TWEETS-master/UNT_CAMPUS_TWEETS-master/UNT Campus_Tweets ReactJS/src/UserPostFooterIcons.js"],"names":["React","useState","useEffect","FavoriteBorderIcon","EditIcon","DeleteIcon","axios","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","UserPostFooterIcons","tweetId","likes","openDelete","setOpenDelete","openUpdate","setOpenUpdate","tweetBody","setTweetBody","tweetImage","setTweetImage","tweetLikes","setTweetLikes","handleDeleteClickOpen","handleDeleteClose","handleUpdateClickOpen","handleUpdateClose","deleteTweet","console","log","delete","window","location","reload","updateTweet","put","changeTweetBodyHandler","e","target","value","changeTweetImageHandler","get","then","response","tweet","data","display","alignItems","flexWrap","color","fontSize","fontWeight","marginLeft","cursor"],"mappings":";;;;;AAAA;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,SAASC,mBAAT,CAA6B;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAA7B,EAA+C;AAAA;;AAE3C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAM0B,qBAAqB,GAAG,MAAM;AAChCT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,QAAMU,iBAAiB,GAAG,MAAM;AAC5BV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAIA,QAAMW,qBAAqB,GAAG,MAAM;AAChCT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,QAAMU,iBAAiB,GAAG,MAAM;AAC5BV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAIA,QAAMW,WAAW,GAAIhB,OAAD,IAAa;AAC7BiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAO,GAAC,SAApB;AACAT,IAAAA,KAAK,CAAC4B,MAAN,CAAc,wCAAuCnB,OAAQ,EAA7D;AACAG,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAiB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,GALD;;AAOA,QAAMC,WAAW,GAAIvB,OAAD,IAAa;AAC7BiB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAS,GAAC,SAAV,GAAoBE,UAAhC;AACAjB,IAAAA,KAAK,CAACiC,GAAN,CAAW,wCAAuCxB,OAAQ,EAA1D,EAA6D;AAACM,MAAAA,SAAS,EAAEA,SAAZ;AAAuBE,MAAAA,UAAU,EAAEA;AAAnC,KAA7D;AACAH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAe,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,GALD;;AAOA,QAAMG,sBAAsB,GAAIC,CAAD,IAAO;AAClCnB,IAAAA,YAAY,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,QAAMC,uBAAuB,GAAIH,CAAD,IAAO;AACnCjB,IAAAA,aAAa,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAIAzC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACuC,GAAN,CAAW,wCAAuC9B,OAAQ,EAA1D,EAA6D+B,IAA7D,CAAkEC,QAAQ,IAAI;AAC1E,UAAIC,KAAK,GAAGD,QAAQ,CAACE,IAArB;AACA3B,MAAAA,YAAY,CAAC0B,KAAK,CAAC3B,SAAP,CAAZ;AACAG,MAAAA,aAAa,CAACwB,KAAK,CAACzB,UAAP,CAAb;AACAG,MAAAA,aAAa,CAACsB,KAAK,CAAChC,KAAP,CAAb;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BAEI;AAAM,MAAA,KAAK,EAAE;AAACkC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,UAAU,EAAE,QAA9B;AAAwCC,QAAAA,QAAQ,EAAE;AAAlD,OAAb;AAAA,8BACI,QAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAC,OAA7B;AAAqC,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,MAAX;AAAmBC,UAAAA,UAAU,EAAE,KAA/B;AAAuCF,UAAAA,KAAK,EAAE,MAA9C;AAAsDG,UAAAA,UAAU,EAAE;AAAlE,SAAV;AAAA,kBAAqF/B,UAAU,GAAG,CAAb,KAAmBA,UAAU,KAAK,CAAf,GAAoB,GAAEA,UAAW,OAAjC,GAA2C,GAAEA,UAAW,QAA3E;AAArF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAC,OAAnB;AAA2B,MAAA,OAAO,EAAEI,qBAApC;AAA2D,MAAA,KAAK,EAAE;AAAC4B,QAAAA,MAAM,EAAC;AAAR;AAAlE;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAC,OAArB;AAA6B,MAAA,OAAO,EAAE9B,qBAAtC;AAA6D,MAAA,KAAK,EAAE;AAAC8B,QAAAA,MAAM,EAAE;AAAT;AAApE;AAAA;AAAA;AAAA;AAAA,YAPJ,eASI,QAAC,MAAD;AACA,MAAA,IAAI,EAAExC,UADN;AAEA,MAAA,OAAO,EAAEW,iBAFT;AAGA,yBAAgB,oBAHhB;AAIA,0BAAiB,0BAJjB;AAKA,MAAA,QAAQ,EAAC,IALT;AAMA,MAAA,SAAS,EAAE,IANX;AAAA,8BAQI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA,kBAAsC;AAAtC;AAAA;AAAA;AAAA;AAAA,cARJ,eASI,QAAC,aAAD;AAAA,+BACI,QAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ,eAeI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,iBAAjB;AAAoC,UAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMG,WAAW,CAAChB,OAAD,CAAlC;AAA6C,UAAA,KAAK,EAAC,WAAnD;AAA+D,UAAA,SAAS,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAmCI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEI,UAAd;AAA0B,MAAA,OAAO,EAAEW,iBAAnC;AAAsD,yBAAgB,mBAAtE;AAA0F,MAAA,QAAQ,EAAC,IAAnG;AAAwG,MAAA,SAAS,EAAE,IAAnH;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA,+BAEI,QAAC,SAAD;AACA,UAAA,SAAS,MADT;AAEA,UAAA,MAAM,EAAC,OAFP;AAGA,UAAA,EAAE,EAAC,OAHH;AAIA,UAAA,KAAK,EAAC,OAJN;AAKA,UAAA,IAAI,EAAC,MALL;AAMA,UAAA,KAAK,EAAET,SANP;AAOA,UAAA,SAAS,MAPT;AAQA,UAAA,QAAQ,EAAEmB;AARV;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAgBI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEV,iBAAjB;AAAoC,UAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMQ,WAAW,CAACvB,OAAD,CAAlC;AAA6C,UAAA,KAAK,EAAE;AAACsC,YAAAA,KAAK,EAAE;AAAR,WAApD;AAAsE,UAAA,SAAS,MAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgEH;;GAvHQvC,mB;;KAAAA,mB;AAyHT,eAAeA,mBAAf","sourcesContent":["// This component allows the users to perform actions such as delete and update the post.\n\nimport React, {useState, useEffect} from 'react'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\nfunction UserPostFooterIcons({tweetId, likes}) {\n\n    const [openDelete, setOpenDelete] = useState(false);\n    const [openUpdate, setOpenUpdate] = useState(false);\n    const [tweetBody, setTweetBody] = useState('');\n    const [tweetImage, setTweetImage] = useState('');\n    const [tweetLikes, setTweetLikes] = useState(0);\n\n    const handleDeleteClickOpen = () => {\n        setOpenDelete(true);\n    };\n\n    const handleDeleteClose = () => {\n        setOpenDelete(false);\n    };\n\n    const handleUpdateClickOpen = () => {\n        setOpenUpdate(true);\n    };\n\n    const handleUpdateClose = () => {\n        setOpenUpdate(false);\n    };\n\n    const deleteTweet = (tweetId) => {\n        console.log(tweetId+\"deleted\")\n        axios.delete(`http://localhost:8080/twitter/tweets/${tweetId}`)\n        setOpenDelete(false)\n        window.location.reload()\n    }\n\n    const updateTweet = (tweetId) => {\n        console.log(tweetBody+\"-------\"+tweetImage)\n        axios.put(`http://localhost:8080/twitter/tweets/${tweetId}`, {tweetBody: tweetBody, tweetImage: tweetImage})\n        setOpenUpdate(false)\n        window.location.reload()\n    }\n\n    const changeTweetBodyHandler = (e) => {\n        setTweetBody(e.target.value)\n    }\n\n    const changeTweetImageHandler = (e) => {\n        setTweetImage(e.target.value)\n    }\n\n    useEffect(() => {\n        axios.get(`http://localhost:8080/twitter/tweets/${tweetId}`).then(response => {\n            let tweet = response.data;\n            setTweetBody(tweet.tweetBody)\n            setTweetImage(tweet.tweetImage)\n            setTweetLikes(tweet.likes)\n        })\n    }, [])\n\n    return (\n        <React.Fragment>\n           \n            <span style={{display: 'flex', alignItems: 'center', flexWrap: 'wrap'}}>\n                <FavoriteBorderIcon fontSize=\"small\" style={{color: 'red'}}/>\n                <p style={{fontSize: '14px', fontWeight: '600' , color: 'gray', marginLeft: '5px'}}>{tweetLikes > 0 && (tweetLikes === 1 ? `${tweetLikes} like` : `${tweetLikes} likes`)}</p>\n            </span>\n            <EditIcon fontSize=\"small\" onClick={handleUpdateClickOpen} style={{cursor:'pointer'}}/>\n            <DeleteIcon fontSize=\"small\" onClick={handleDeleteClickOpen} style={{cursor: 'pointer'}}/>\n\n            <Dialog\n            open={openDelete}\n            onClose={handleDeleteClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth=\"sm\" \n            fullWidth={true}\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Delete Tweet?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        This can't be undone and it will be removed from your profile, the timeline of any accounts\n                        that follow you, and from Twitter search results.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDeleteClose} color=\"primary\">\n                    Cancel\n                    </Button>\n                    <Button onClick={() => deleteTweet(tweetId)} color=\"secondary\" autoFocus>\n                    Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <Dialog open={openUpdate} onClose={handleUpdateClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"sm\" fullWidth={true}>\n                <DialogTitle id=\"form-dialog-title\">Update Tweet?</DialogTitle>\n                <DialogContent>\n                 \n                    <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"tweet\"\n                    label=\"Tweet\"\n                    type=\"text\"\n                    value={tweetBody}\n                    fullWidth\n                    onChange={changeTweetBodyHandler}\n                    />\n                   \n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleUpdateClose} color=\"primary\">\n                    Close\n                    </Button>\n                    <Button onClick={() => updateTweet(tweetId)} style={{color: 'green'}} autoFocus>\n                    Update\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n        </React.Fragment>\n    )\n}\n\nexport default UserPostFooterIcons\n"]},"metadata":{},"sourceType":"module"}